CREATE TABLE IF NOT EXISTS Users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,  -- Unique across all platforms
    platform TEXT NOT NULL,  -- e.g., 'irc', 'discord'
    settings JSON,  -- User settings stored as JSON
    CHECK (platform IN ('irc', 'discord'))  -- To ensure only 'irc' or 'discord' can be used as platforms
);

CREATE TABLE IF NOT EXISTS Batches (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    prompt TEXT,
    style_prompt TEXT,
    settings JSON,  -- Generation settings stored as JSON
    gpt_generated BOOLEAN NOT NULL DEFAULT 0,  -- Flag to indicate if the prompt was generated by GPT-4
    original_prompt TEXT,  -- Original prompt used by GPT-4, if applicable
    user_id INTEGER,  -- User who generated the batch
    FOREIGN KEY (user_id) REFERENCES Users(id)
);

CREATE TABLE IF NOT EXISTS Images (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    url TEXT NOT NULL,  -- URL for the finished picture
    batch_id INTEGER,  -- Batch to which the image belongs
    FOREIGN KEY (batch_id) REFERENCES Batches(id)
);

CREATE TABLE IF NOT EXISTS Votes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    image_id INTEGER NOT NULL,  -- Image voted on
    user_id INTEGER NOT NULL,  -- User who voted
    vote INTEGER NOT NULL,  -- The vote itself, could be -1 (downvote) or 1 (upvote)
    CHECK (vote IN (-1, 1)),  -- To ensure only -1 or 1 can be used as votes
    FOREIGN KEY (image_id) REFERENCES Images(id),
    FOREIGN KEY (user_id) REFERENCES Users(id),
    UNIQUE(image_id, user_id)  -- To ensure a user can't vote more than once on an image
);
